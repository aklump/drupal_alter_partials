var tipuesearch = {"pages":[{"title":"Drupal Module: Alter Partials","text":"  Author: Aaron Klump  &#x73;&#111;&#117;&#x72;&#x63;&#101;c&#x6f;&#100;&#101;&#x40;&#x69;&#110;&#116;&#x68;&#x65;&#108;&#x6f;&#x66;&#116;&#115;&#x74;&#x75;&#100;i&#x6f;&#115;&#46;&#x63;&#x6f;&#109;  Summary  Entity alters using partial files not functions.  This module allows you to use partial files much the same way that you use tpl files in your theme, to alter build arrays.  All files should be placed in a subfolder of your theme called alter_partials.  This is in lieu of placing lots of changes in one big hook_HOOK_alter() function, which may get unruly.  Support exists for several entities and Display Suite.  As an example, to alter display suite layout variables before they are rendered, the files suggestions are the following (where we have page node with nid 17 using view mode of narrow_page):  Pattern is: PREFIX--BUNDLE OR ID--DISPLAY MODE.  alter_partials\/ds--node--page--narrow-page.inc alter_partials\/ds--node--17--narrow-page.inc   By creating one of those files in your theme directory and manipulating the $build or $var variables, you will affect change.  For performance reasons, you must include the view mode.  Installation   Install as usual, see http:\/\/drupal.org\/node\/70151 for further information. Enable advanced help for more information and examples.   View modes field  An extra field is provided to serve as a UI indicator that the view mode is not being configured via the UI, but instead via code.  It reads Display managed in code.  The intention is that for a given display mode, you can show only this field and it will be a clear sign to the content managers why they cannot configure the view mode using normal field means.  For more info see hook_alter_partials_entities_in_code_alter(). * When you create a partial file, it should automatically cause this new view mode field to appear; if it doesn't look into hook_alter_partials_entities_in_code_alter()  Advanced Configuration   It is possible for modules to provide alter partials as well.  Refer to alter_partials.api.php for more info.   Usage       Type   Prefix   Vars       Node   node--   &amp;$build, $node     User   user--   &amp;$build     Taxonomy Term   taxonomy-term--   &amp;$build     Display Suite   ds--ENTITY TYPE   &amp;$build, &amp;$vars*, $node     &#42; $vars: These are the variables from node_preprocess, before node_process.  Development   During development you can disable the caching and thereby avoid having to drupal cache clear when adding new partials; you should not do this on production though.  To do so add the following line to your settings.php file:  $conf['alter_partials_cache_enabled'] = FALSE;  There is an included module alter_partials_dev which should not be enabled in a production environment. The above cache disable is accomplished for you when you enable alter_partials_dev module, which also provides a block to help with filenames.  Enable the module and visit the blocks admin page and assign it to a region.  That block will populate with all the possible filenames that could have been used for that page (requires JS).   Design Decisions\/Rationale  With the move toward smaller partials like in SASS I though it would be easier to manage code doing things this way rather than hundreds of lines of a function all wrapped in node_view_alter().  Contact   In the Loft Studios Aaron Klump - Developer PO Box 29294 Bellingham, WA 98228-1294 skype: intheloftstudios d.o: aklump http:\/\/www.InTheLoftStudios.com  ","tags":"","url":"README.html"},{"title":"Provide Partials by Module","text":"   Your modules can also provide alter partials but they must declare themselves using hook_alter_partials_info.  See alter_partials.api.php for documentation. Implement hook_alter_partials_info in your module. Follow the theme instructions, except that you will create that files inside your module's alter_partials directory.  ","tags":"","url":"modules.html"},{"title":"Search Results","text":" ","tags":"","url":"search--results.html"},{"title":"Quick Start","text":"   Create the folder alter_partials in your theme. Enable alter_partials_dev and assign the block Alter Partials suggestions to a visible region in your active theme. By enabling alter_partials_dev the caching of partials is disabled, you have access to a suggestion list of filenames as a block, and a partial stub writer is available, so this is very helpful during development. alter_partials_dev MUST NOT BE ENABLED ON A PRODUCTION SITE. Visit the page you want to alter and find the filename suggestion that applies. Create that file inside alter_partials. Set the contents of the file to the following, and make sure the file is writeable by PHP.  &lt;?php alter_partials_dev_stub(__FILE__, get_defined_vars());  Visit the page and the file will be rewritten with a stub; reload the file to see the new contents. The render array is called $build, which controls the output. You now have an alter partial file; modify $build as desired.  ","tags":"","url":"themes.html"}]};
