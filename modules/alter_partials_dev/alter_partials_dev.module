<?php
/**
 * @file
 * Base file for the alter_partials_dev module.
 *
 * @defgroup alter_partials_dev Alter Partials Dev
 * @{
 */


/**
 * Implements hook_init().
 */
function alter_partials_dev_init() {
  global $conf;
  // Turn this off when the dev module is enabled.
  $conf['alter_partials_cache_enabled'] = FALSE;
}

/**
 * Implements hook_permission().
 */
function alter_partials_dev_permission() {
  return array(
    'alter_partials_dev:access' => array(
      'title' => t('Access Alter Partials Dev Info'),
      'description' => t('Access developement info.'),
      'restrict access' => FALSE,
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function alter_partials_dev_block_info() {
  $blocks['suggestions'] = array(
    'info' => t('Alter Partials suggestions'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function alter_partials_dev_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'suggestions':
      if (user_access('alter_partials_dev:access')) {
        $block['subject'] = t('Alter Partials filename suggestions');
        // The content will be added via ajax on page load.
        $block['content'] = array('#markup' => '<div></div>');
      }
      break;
  }

  return $block;
}

function alter_partials_dev_preprocess_html(&$build) {
  global $_alter_partials_suggestions;
  if (user_access('alter_partials_dev:access')) {
    $inject_js['#attached']['js'][] = array(
      'type' => 'file',
      'data' => drupal_get_path('module', 'alter_partials_dev') . '/alter_partials_dev.js',
      'scope' => 'footer',
    );
    $inject_js['#attached']['js'][] = array(
      'type' => 'setting',
      'data' => array(
        'alterPartialsDev' => array(
          'suggestions' => $_alter_partials_suggestions,
        ),
      ),
    );
    drupal_render($inject_js);
  }
}

function alter_partials_dev_stub($path_to_output, array $vars) {
  $filename = str_replace('--', ', ', pathinfo($vars['partial'], PATHINFO_FILENAME));
  $vars = array_keys($vars);
  sort($vars);
  $list = array_reduce(array_filter($vars, function ($var) {
    return !in_array($var, ['partials']);
  }), function ($carry, $var) {
    $type = gettype($var);
    return $carry . "\n *   - \$$var $type";
  });
  $stub = <<<EOD
<?php
/**
 * @file Alter partial for {$filename}
 *       
 * Available variables:{$list} 
 */

EOD;
  drupal_alter('alter_partials_dev_stub', $stub, $path_to_output);
  $stub .= PHP_EOL. PHP_EOL . PHP_EOL . file_get_contents($path_to_output);
  file_put_contents($path_to_output, $stub);
}

